openapi: 3.0.0
info:
  title: "Raidiam Connect Trust Framework"
  version: "1.2"
  description: Raidiam Trust Services API
  license:
    name: MIT
servers:
  - url: https://matls-api.directory.openbankingbrasil.org.br
    description: Directory Production
  - url:  https://matls-api.sandbox.directory.openbankingbrasil.org.br
    description: Directory Sandbox
paths:

  '/organisations':
    get:
      summary: Get all organisations.
      tags:
        - Organisations

      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort

      responses:
        '200':
          $ref: '#/components/responses/Organisations'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
    get:
      summary: Get the given organisation's details
      tags:
        - Organisations
      responses:
        '200':
          $ref: '#/components/responses/OrganisationWithTnc'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software

  '/references/authorities':
    get:
      summary: Reference Data of all authorities
      tags:
        - References - Authority

      responses:
        '200':
          $ref: '#/components/responses/Authorities'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/references/authorities/{AuthorityId}':
    parameters:
      - $ref: '#/components/parameters/AuthorityId'
    get:
      summary: Get a reference authority by Id
      tags:
        - References - Authority
      responses:
        '200':
          $ref: '#/components/responses/Authority'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/references/authorisationdomains':
    get:
      summary: Reference data of all authorisation domains
      tags:
        - References - Authorisation Domain
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomains'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/references/authorisationdomains/{AuthorisationDomainName}':
    parameters:
      - $ref: '#/components/parameters/AuthorisationDomainName'
    get:
      summary: Get an authorisation domain by Name
      tags:
        - References - Authorisation Domain
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/references/authorisationdomainroles':
    get:
      summary: Reference data of all authorisation domain roles
      tags:
        - References - Authorisation Domain Role
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainRoles'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/references/authorisationdomainroles/{AuthorisationDomainRoleName}':
    get:
      summary: Get an authorisation domain role by Name
      parameters:
        - $ref: '#/components/parameters/AuthorisationDomainRoleName'
      tags:
        - References - Authorisation Domain Role
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainRole'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/references/authoritydomainmapping':
    get:
      summary: Mappings of authorities with authorisation domains
      tags:
        - References - Authority Authorisation Domain
      responses:
        '200':
          $ref: '#/components/responses/AuthorityAuthorisationDomains'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/references/authorities/{AuthorityId}/authorisationdomains':
    parameters:
      - $ref: '#/components/parameters/AuthorityId'
    get:
      summary: Reference data of all authorisation domains for an Authority ID
      tags:
        - References - Authority Authorisation Domain
      responses:
        '200':
          $ref: '#/components/responses/AuthorityAuthorisationDomains'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/references/authorities/{AuthorityId}/authorisationdomains/{AuthorityAuthorisationDomainId}':
    get:
      summary: Get an authority authorisation domain by Id
      parameters:
        - $ref: '#/components/parameters/AuthorityId'
        - $ref: '#/components/parameters/AuthorityAuthorisationDomainId'
      tags:
        - References - Authority Authorisation Domain
      responses:
        '200':
          $ref: '#/components/responses/AuthorityAuthorisationDomain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software



  '/organisations/{OrganisationId}/authoritydomainclaims':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
    get:
      summary: Get the authority domain claims for the given organisation
      tags:
        - Organisation Authority Domain Claims
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityDomainClaims'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/authoritydomainclaims/{OrganisationAuthorityDomainClaimId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/OrganisationAuthorityDomainClaimId'
    get:
      summary: Get an authority domain claim by Id
      tags:
        - Organisation Authority Domain Claims
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityDomainClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/authorityclaims':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
    get:
      summary: Get the authority claims for the given organisation
      tags:
        - Organisation Authority Claims

      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaims'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/authorityclaims/{OrganisationAuthorityClaimId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/OrganisationAuthorityClaimId'
    get:
      summary: Get an authority claim by Id
      tags:
        - Organisation Authority Claims
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/authorityclaims/{OrganisationAuthorityClaimId}/authorisations':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/OrganisationAuthorityClaimId'
    get:
      summary: Get an authority claims' authorisations
      tags:
        - Organisation Authority Claims Authorisations

      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaimAuthorisations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/authorityclaims/{OrganisationAuthorityClaimId}/authorisations/{OrganisationAuthorisationId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/OrganisationAuthorityClaimId'
      - $ref: '#/components/parameters/OrganisationAuthorisationId'
    get:
      summary: Get a claim authorisation
      tags:
        - Organisation Authority Claims Authorisations

      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaimAuthorisation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software

  '/organisations/{OrganisationId}/{AuthorisationDomainName}/users':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationDomainName'
    get:
      summary: All users for the given authorisation domain
      tags:
        - Organisation Domain Users
        
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainUsers'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
          
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software

  '/organisations/{OrganisationId}/{AuthorisationDomainName}/users/{UserEmailId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationDomainName'
      - $ref: '#/components/parameters/UserEmailId'
    get:
      summary: Authorisation Domain user details
      tags:
        - Organisation Domain Users
        
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainUsers'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
          
      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software
        
  '/organisations/{OrganisationId}/contacts':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
    get:
      summary: Get the contacts for the given organisation
      tags:
        - Contacts
      responses:
        '200':
          $ref: '#/components/responses/Contacts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/contacts/{ContactId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/ContactId'
    get:
      summary: Get a contact by Id
      tags:
        - Contacts
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/authorisationservers':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
    get:
      summary: Get all Authorisation Servers for the given organisation
      tags:
        - Authorisation Servers
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServers'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
    get:
      summary: Get an authorisation server by Id
      tags:
        - Authorisation Servers
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServer'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
    get:
      summary: Get all Api Resources for the given Authorisation Server
      tags:
        - Authorisation Servers - API Resources
      responses:
        '200':
          $ref: '#/components/responses/ApiResources'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources/{ApiResourceId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
      - $ref: '#/components/parameters/ApiResourceId'

    get:
      summary: Get an authorisation server API resource by Id
      tags:
        - Authorisation Servers - API Resources
      responses:
        '200':
          $ref: '#/components/responses/ApiResource'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources/{ApiResourceId}/apidiscoveryendpoints':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
      - $ref: '#/components/parameters/ApiResourceId'

    get:
      summary: Get all Api Discovery Endpoints for the given Authorisation Server and Api Version
      tags:
        - Authorisation Servers - API Discovery Endpoints
      responses:
        '200':
          $ref: '#/components/responses/ApiDiscoveryEndpoints'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources/{ApiResourceId}/apidiscoveryendpoints/{ApiDiscoveryEndpointId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
      - $ref: '#/components/parameters/ApiResourceId'
      - $ref: '#/components/parameters/ApiDiscoveryEndpointId'

    get:
      summary: Get an authorisation server API discovery endpoint by Id
      tags:
        - Authorisation Servers - API Discovery Endpoints
      responses:
        '200':
          $ref: '#/components/responses/ApiDiscoveryEndpoint'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/softwarestatements':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'

    get:
      summary: Get all software statements for the given organisation
      tags:
        - Software Statements
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatements'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get a software statement
      tags:
        - Software Statements

      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/authorityclaims':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get the authority claims for the given software statement
      tags:
        - Software Statement Authority Claims

      responses:
        '200':
          $ref: '#/components/responses/SoftwareAuthorityClaims'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/authorityclaims/{SoftwareAuthorityClaimId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/SoftwareAuthorityClaimId'
    get:
      summary: Get an authority claim by Id
      tags:
        - Software Statement Authority Claims
      responses:
        '200':
          $ref: '#/components/responses/SoftwareAuthorityClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/certificates':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary: Get certificates for the given software statement
      tags:
        - Software Statement Certificates

      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeys'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software



  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/certificates/{SoftwareStatementCertificateOrKeyType}/{CertificateOrKeyId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/SoftwareStatementCertificateOrKeyType'
      - $ref: '#/components/parameters/CertificateOrKeyId'

    get:
      summary: Get the certificate of the given type and ID for the given software statement
      tags:
        - Software Statement Certificates

      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKey'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software


  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/assertion':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
    get:
      summary:
        Get a Software Statement Assertion for the given SoftwareStatementID.
      tags:
        - Software Statement Assertions
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementAssertion'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'

      security:
        - oAuth-sandbox:
            - directory:software
        - oAuth-production:
            - directory:software

components:
  securitySchemes:
    oAuth-sandbox:
      type: oauth2
      description: This API uses oAuth 2.0 client credentials grant 
      flows:
          clientCredentials:
            tokenUrl: https:/matls-auth.sandbox.directory.openbankingbrasil.org.br/token
            scopes:
              directory:software: Software statement client operations
    oAuth-production:
      type: oauth2
      description: This API uses oAuth 2.0 client credentials grant 
      flows:
          clientCredentials:
            tokenUrl: https://auth.directory.openbankingbrasil.org.br/token
            scopes:
              directory:software: Software statement client operations




  parameters:
    AuthorisationServerId:
      name: AuthorisationServerId
      description: The authorisation server Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AuthorisationServerId'
    OrganisationAuthorityClaimId:
      name: OrganisationAuthorityClaimId
      description: The Authority claims ID for an organisation
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationAuthorityClaimId'
    OrganisationAuthorisationId:
      name: OrganisationAuthorisationId
      description: The authorisation ID for an organisation's authority claims
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationAuthorisationId'
    CertificateOrKeyId:
      name: CertificateOrKeyId
      description: The certificate or key Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CertificateOrKeyId'
    ContactId:
      name: ContactId
      description: The contact id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ContactId'
    OrganisationCertificateType:
      name: OrganisationCertificateType
      description: The certificate type
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationCertificateType'
    OrganisationId:
      name: OrganisationId
      description: The organisation ID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationId'
    AuthorityId:
      name: AuthorityId
      description: The reference authority Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AuthorityId'
    SoftwareStatementCertificateOrKeyType:
      name: SoftwareStatementCertificateOrKeyType
      description: The certificate or key type that can be associated with a software statement
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareStatementCertificateOrKeyType'
    SoftwareStatementId:
      name: SoftwareStatementId
      description: The software statement ID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareStatementId'
    SoftwareAuthorityClaimId:
      name: SoftwareAuthorityClaimId
      description: The software statement's authority claim ID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareAuthorityClaimId'
    UserEmailId:
      name: UserEmailId
      description: Email address of the super user
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UserEmailId'
    AuthorisationDomainName:
      name: AuthorisationDomainName
      description: Authorisation Domain Name. Eg:PSD2
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AuthorisationDomainName'
    AuthorisationDomainRoleName:
      name: AuthorisationDomainRoleName
      description: Authorisation Domain Role Name. Eg:TPP
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AuthorisationDomainRoleName'
    AuthorityAuthorisationDomainId:
      name: AuthorityAuthorisationDomainId
      description: ID of the Authority mapped with Authorisation Domain
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AuthorityAuthorisationDomainId'
    OrganisationAuthorityDomainClaimId:
      name: OrganisationAuthorityDomainClaimId
      description: Organisation Authority Domain Claim Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationAuthorityDomainClaimId'
    AuthorisationDomainUserId:
      name: AuthorisationDomainUserId
      description: Unique record Id to identify Domain User
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AuthorisationDomainUserId'
    TnCId:
      name: TnCId
      description: Terms and Conditions unique identifier
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/TnCId'
    ClientId:
      name: ClientId
      description: Oauth clientId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ClientCreationResponse/properties/client_id'
    ApiResourceId:
      name: ApiResourceId
      description: The api version Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ApiResourceId'
    ApiDiscoveryEndpointId:
      name: ApiDiscoveryEndpointId
      description: The api discovery endpoint Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ApiDiscoveryEndpointId'
    ExternalSigningServiceEnvelopeId:
      name: ExternalSigningServiceEnvelopeId
      description: The envelope id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'

  responses:
    NoContent:
      description: No Content
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
    NotFound:
      description: Not found
    NotAcceptable:
      description: Not Acceptable
    Conflict:
      description: Conflict
    BadGateway:
      description: Bad Gateway
    InternalServerError:
      description: Internal Server Error
    OrganisationAuthorityClaims:
      description: All authority claims for the organisation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityClaims'
    OrganisationAuthorityClaim:
      description: Authority claim for the given Id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityClaim'

    OrganisationAuthorityClaimAuthorisations:
      description: Authorisations response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisations'

    OrganisationAuthorityClaimAuthorisation:
      description: Authorisations response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisation'

    AuthorisationServers:
      description: All authorisation servers for the org
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationServers'

    AuthorisationServer:
      description: Authorisation server response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationServer'

    CertificatesOrKeys:
      description: All certificates for the org
      content:
        application/jwk-set+json:
          schema:
            $ref: '#/components/schemas/CertificatesOrKeys'

    CertificatesOrKey:
      description: A certificate object
      content:
        application/jwk+json:
          schema:
            $ref: '#/components/schemas/CertificateOrKey'
    Contacts:
      description: All contacts for the org
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contacts'
    Contact:
      description: A contact object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
    OrganisationWithTnc:
      description: Full details of the organisation including TnC information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationWithTnc'
    Organisations:
      description: |
        List of the organisation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organisations'
    Organisation:
      description: |
        Full details of the organisation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organisation'
    OrganisationSnapshot:
      description: Snapshot data of the organisation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationSnapshot'
    OrganisationsSnapshot:
      description: Snapshot data of all the organisations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationsSnapshot'
    OrganisationSnapshotPage:
      description: Paged Organisations Snapshot
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationSnapshotPage'
    OrganisationsExportOpenData:
      description: Export the open-data for all the organisations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationsExportOpenData'
    OrgTermsAndConditionsDetail:
      description: Details of the TnC and external signing service
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrgTermsAndConditionsDetail'

    Authorities:
      description: |
        Reference data table for all authorities with their countries
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authorities'

    Authority:
      description: |
        Get a reference authority by Id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authority'

    Introspection:
      description: |
        metadata for token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Introspection'

    SoftwareStatements:
      description: All software statements for the org
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareStatements'
    SoftwareStatement:
      description: Get the software statements with the given id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareStatement'
    SoftwareStatementAssertion:
      description: OK
      content:
        application/jwt:
          schema:
            $ref: '#/components/schemas/SoftwareStatementAssertion'
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementAssertion'
    SoftwareAuthorityClaims:
      description: Authority claim for the given Id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareAuthorityClaims'
    SoftwareAuthorityClaim:
      description: Authority claim for the given Id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareAuthorityClaim'

    ClientCreationResponse:
      description: |
        Creates an OAuth Client in the OpenID Server
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientCreationResponse'

    SuperUsers:
      description: All Super users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuperUsers'

    SuperUser:
      description: Super user data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuperUser'

    AuthorisationDomainUsers:
      description: All users belonging to an authorisation domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainUsers'

    AuthorisationDomainUser:
      description: User data belonging to an authorisation domain
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainUser'

    AuthorisationDomains:
      description: All data of authorisation domains mapped to an authority
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomains'

    AuthorisationDomain:
      description: Data of an authorisation domain mapped to an authority
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomain'

    AuthorisationDomainRoles:
      description: All roles data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainRoles'

    AuthorisationDomainRole:
      description: Role data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainRole'

    AuthorityAuthorisationDomains:
      description: All authority to domain mappings data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorityAuthorisationDomains'

    AuthorityAuthorisationDomain:
      description: Authority to domain mapping data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorityAuthorisationDomain'

    OrganisationAuthorityDomainClaims:
      description: All authority to domain mappings data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityDomainClaims'

    OrganisationAuthorityDomainClaim:
      description: All authority to domain mappings data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'

    UserDetail:
      description: Details of the user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserDetail'

    UserOPInfo:
      description: User information from the OpenId Provider
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserOPInfo'

    WellKnown:
      description: endpoint discovery for well known endpoint
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WellKnown'

    TermsAndConditionsPage:
      description: Paged data of TnC items
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TermsAndConditionsPage'

    TermsAndConditionsItem:
      description: Details of the TnC item
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TermsAndConditionsItem'

    OrganisationAdminUsers:
      description: All admin users for this org
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAdminUsers'

    OrganisationAdminUser:
      description: Admin user details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAdminUser'

    ApiResources:
      description: Authorisation server Api Resources response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResources'

    ApiResource:
      description: Authorisation server Api Resource response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResource'

    ApiDiscoveryEndpoints:
      description: Authorisation server response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiDiscoveryEndpoints'

    ApiDiscoveryEndpoint:
      description: Authorisation server response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiDiscoveryEndpoint'

    UserTermsAndConditionsPage:
      description: User TnCs history
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserTermsAndConditionsPage'

    OrgTermsAndConditionsPage:
      description: Org TnCs history
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrgTermsAndConditionsPage'

    EssPollResponse:
      description: External Signing Service Poll response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EssPollResponse'

    EssPollAllResponse:
      description: External Signing Service Poll All response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EssPollResponses'

    AllWebhooksResponse:
      description: Update all webhooks response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhookStatusResponses'



  schemas:
    BadRequest:
      type: object
      properties:
        errors:
          type: array
          description: Validation Error messages
          items:
            type: string
    StatusEnum:
      type: string
      enum:
        - Active
        - Inactive
    OrganisationAuthorityClaims:
      type: array
      items:
        $ref: '#/components/schemas/OrganisationAuthorityClaim'

    OrganisationAuthorityClaim:
      type: object
      properties:
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        OrganisationAuthorityClaimId:
          $ref: '#/components/schemas/OrganisationAuthorityClaimId'
        AuthorityId:
          $ref: '#/components/schemas/AuthorityId'
        Status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
            - description: Is this software statement Active/Inactive
            - default: Active
        AuthorisationDomain:
          type: string
          description: Authorisation Domain for the authority
          maxLength: 30
        Role:
          type: string
          description: Roles for the Authority i.e. ASPSP, AISP, PISP, CBPII
          maxLength: 30
        Authorisations:
          type: array
          items:
            type: object
            properties:
              Status:
                type: string
                description: Is this authorsation Active/Inactive
                enum:
                  - Active
                  - Inactive
                default: Active
              MemberState:
                type: string
                description: Abbreviated states information i.e. GB, IE, NL etc
                maxLength: 2
        RegistrationId:
          type: string
          description: Registration ID for the organisation
          maxLength: 40
        UniqueTechnicalIdenifier:
          type: array
          items:
            type: string
            maxLength: 256

    OrganisationAuthorityClaimAuthorisations:
      type: array
      items:
        $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisation'

    OrganisationAuthorityClaimAuthorisation:
      type: object
      properties:
        OrganisationAuthorisationId:
          $ref: '#/components/schemas/OrganisationAuthorisationId'
        OrganisationAuthorityClaimId:
          $ref: '#/components/schemas/OrganisationAuthorityClaimId'
        Status:
          type: string
          description: Is this authority claim Active/Inactive
          enum:
            - Active
            - Inactive
          default: Active
        MemberState:
          type: string
          description: Abbreviated states information i.e. GB, IE, NL etc
          maxLength: 10

    AuthorisationServers:
      type: array
      items:
        $ref: '#/components/schemas/AuthorisationServer'

    AutoRegistrationSupported:
      type: boolean

    CustomerFriendlyDescription:
      type: string
      maxLength: 256

    CustomerFriendlyLogoUri:
      description: A compliant URI
      pattern: "^(http:\\/\\/|https:\\/\\/).*"
      x-pattern-message: "CustomerFriendlyLogoUri must be in a URI format https://... or http://..."
      type: string
      format: uri
      maxLength: 256

    CustomerFriendlyName:
      type: string
      maxLength: 256

    DeveloperPortalUri:
      description: A compliant URI
      pattern: "^(http:\\/\\/|https:\\/\\/).*"
      x-pattern-message: "DeveloperPortalUri must be in a URI format https://... or http://..."
      type: string
      format: uri
      maxLength: 256

    TermsOfServiceUri:
      description: A compliant URI
      pattern: "^(http:\\/\\/|https:\\/\\/).*"
      x-pattern-message: "TermsOfServiceUri must be in a URI format https://... or http://..."
      type: string
      format: uri
      maxLength: 256

    NotificationWebhook:
      description: A compliant URI
      pattern: "^(http:\\/\\/|https:\\/\\/).*"
      x-pattern-message: "WebhookUri must be in a URI format https://... or http://..."
      type: string
      format: uri
      maxLength: 256

    OpenIDDiscoveryDocument:
      description: A compliant URI
      pattern: "^(http:\\/\\/|https:\\/\\/).*"
      x-pattern-message: "OpenIDDiscoveryDocument must be in a URI format https://... or http://..."
      type: string
      format: uri
      maxLength: 256

    PayloadSigningCertLocationUri:
      description: A compliant URI
      pattern: "^(http:\\/\\/|https:\\/\\/).*"
      x-pattern-message: "PayloadSigningCertLocationUri must be in a URI format https://... or http://..."
      type: string
      format: uri
      maxLength: 256

    AuthorisationServer:
      type: object
      properties:
        AuthorisationServerId:
          $ref: '#/components/schemas/AuthorisationServerId'
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        AutoRegistrationSupported:
          $ref: '#/components/schemas/AutoRegistrationSupported'
        ApiResources:
          type: array
          items:
            $ref: '#/components/schemas/ApiResource'
        CustomerFriendlyDescription:
          $ref: '#/components/schemas/CustomerFriendlyDescription'
        CustomerFriendlyLogoUri:
          $ref: '#/components/schemas/CustomerFriendlyLogoUri'
        CustomerFriendlyName:
          $ref: '#/components/schemas/CustomerFriendlyName'
        DeveloperPortalUri:
          $ref: '#/components/schemas/DeveloperPortalUri'
        TermsOfServiceUri:
          $ref: '#/components/schemas/TermsOfServiceUri'
        NotificationWebhook:
          $ref: '#/components/schemas/NotificationWebhook'
        NotificationWebhookStatus:
          $ref: '#/components/schemas/NotificationWebhookStatusEnum'
        OpenIDDiscoveryDocument:
          $ref: '#/components/schemas/OpenIDDiscoveryDocument'
        PayloadSigningCertLocationUri:
          $ref: '#/components/schemas/PayloadSigningCertLocationUri'
        ParentAuthorisationServerId:
          $ref: '#/components/schemas/AuthorisationServerId'

    AuthorisationServerId:
      type: string
      maxLength: 40
    CertificateOrKeyId:
      type: string
      maxLength: 256
    CertificatesOrKeys:
      type: array
      items:
        $ref: '#/components/schemas/CertificateOrKey'
    CertificateOrKey:
      type: object
      properties:
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        SoftwareStatementIds:
          type: array
          items:
            $ref: '#/components/schemas/SoftwareStatementId'
        ClientName:
          type: string
          maxLength: 40
        Status:
          type: string
          maxLength: 40
        ValidFromDateTime:
          type: string
          maxLength: 30
        ExpiryDateTime:
          type: string
          maxLength: 30
        e:
          type: string
          maxLength: 256
        keyType:
          type: string
          maxLength: 256
        kid:
          type: string
          maxLength: 256
        kty:
          type: string
          maxLength: 256
        n:
          type: string
          maxLength: 256
        use:
          type: string
          maxLength: 256
        x5c:
          type: array
          items:
            description: A PKIX certificate [RFC5280]
            type: string
            maxLength: 256
        x5t:
          type: string
          maxLength: 256
        x5thashS256:
          type: string
          maxLength: 256
        x5u:
          type: string
          maxLength: 256
        SignedCertPath:
          type: string
          maxLength: 256
          description: Used to display location of the signed certificate in PEM format
        JwkPath:
          type: string
          maxLength: 256
          description: Used to display path to JWKS containing this certificate
        OrgJwkPath:
          type: string
          maxLength: 256
          description: Used to display path to Org JWKS containing org certificates

    ContactDetails:
      type: object
      properties:
        EmailAddress:
          type: string
          pattern: "^(.{1,}@[^.]{1,}).*"
          x-pattern-message: "EmailAddress must be a valid email"
          maxLength: 256
        FirstName:
          type: string
          maxLength: 256
        LastName:
          type: string
          maxLength: 256
        Department:
          type: string
          maxLength: 256
        AddressLine1:
          type: string
          description: Address line 1
          maxLength: 256
        AddressLine2:
          type: string
          description: Address line 2
          maxLength: 256
        City:
          type: string
          description: City
          maxLength: 256
        Postcode:
          type: string
          description: Postcode
          maxLength: 40
        Country:
          type: string
          description: Country
          maxLength: 256
        AdditionalInformation:
          type: string
          description: Any additional user information
          maxLength: 65535
        PgpPublicKey:
          type: string
          description: A PGP Public Key in text form
          maxLength: 65535

    ContactType:
      type: string
      enum:
        - Business
        - Technical
        - Billing
        - Incident
        - Security
      default: Business

    PhoneNumber:
      type: string
      minLength: 8
      maxLength: 18

    Contacts:
      type: array
      items:
        $ref: '#/components/schemas/Contact'
      description: The list of contacts

    Contact:
      allOf:
        - type: object
          properties:
            ContactId:
              type: string
              description: Unique contact ID for the row.
            OrganisationId:
              $ref: '#/components/schemas/OrganisationId'
            ContactType:
              allOf:
                - $ref: '#/components/schemas/ContactType'
            PhoneNumber:
              allOf:
                - $ref: '#/components/schemas/PhoneNumber'
        - $ref: '#/components/schemas/ContactDetails'

    ContactId:
      type: string
      maxLength: 256

    OrganisationCertificateType:
      type: string
      enum:
        - qwac
        - qseal
        - rtswac
        - rtsseal
        - brseal
      default: rtsseal

    OrganisationId:
      type: string
      description: Unique ID associated with the organisation
      minLength: 1
      maxLength: 40

    OrganisationAuthorityClaimId:
      type: string
      description: Unique ID associated with the authority claims
      minLength: 1
      maxLength: 40

    OrganisationAuthorisationId:
      type: string
      description: Unique ID associated with authorisations for organisation's authority claims
      minLength: 1
      maxLength: 40

    SoftwareAuthorityClaimId:
      type: string
      description: Unique ID associated with the authority claims for a software statement
      minLength: 1
      maxLength: 40

    AuthorityId:
      type: string
      description: Unique ID associated with the Authorisation reference schema
      minLength: 1
      maxLength: 40

    Organisations:
      type: array
      items:
        $ref: '#/components/schemas/Organisation'

    Organisation:
      type: object
      properties:
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        Status:
          type: string
          description: Status of the directory registration of an organisation
          enum:
            - Active
            - Pending
            - Withdrawn
          default: Active
        OrganisationName:
          type: string
          description: Name of the organisation.
          maxLength: 256
        CreatedOn:
          type: string
          description: JSONDatetime of organisation creation.
          maxLength: 30
        LegalEntityName:
          type: string
          description: Legal Entity name for the org. Usually the same as org name
          maxLength: 256
        CountryOfRegistration:
          type: string
          description: Country of registration for the org
          maxLength: 256
        CompanyRegister:
          type: string
          description: Legal company register for the country, i.e. Companies House
          maxLength: 256
        RegistrationNumber:
          type: string
          description: Company registration number from company register i.e. Companies House registration number
          maxLength: 256
        RegistrationId:
          type: string
          description: Registered ID for the organisation i.e. Legal Entity identifier number
          maxLength: 40
        RegisteredName:
          type: string
          maxLength: 256
        AddressLine1:
          type: string
          description: Address line 1
          maxLength: 256
        AddressLine2:
          type: string
          description: Address line 2
          maxLength: 256
        City:
          type: string
          description: City
          maxLength: 256
        Postcode:
          type: string
          description: Postcode
          maxLength: 40
        Country:
          type: string
          description: Country
          maxLength: 256
        ParentOrganisationReference:
          type: string
          description: Parent Organisation Reference
          maxLength: 65535
        RequiresParticipantTermsAndConditionsSigning:
          type: boolean
          description: true - this organisation requires terms and conditions to be signed. false - this organisation does not require terms and conditions to be signed


    OrganisationWithTnc:
      type: object
      properties:
        OrgDetails:
          $ref: '#/components/schemas/Organisation'
        TncDetails:
          type: object
          properties:
            TnCSigned:
              type: boolean
              description: true - the terms and conditions have been signed. false - the terms and conditions have not been signed
            TnCUpdated:
              type: boolean
              description: true - attached signer template has been updated. false - no tnc present/not updated
            TnCsToBeSigned:
              $ref: '#/components/schemas/TnCsToBeSigned'

    OrgTermsAndConditionsDetail:
      type: object
      description: Participant TnC details
      properties:
        InitiatedBy:
          type: string
          description: Email of the user who initiated the External signing for this participant
        Role:
          type: string
          description: Role of the user who initiated the External signing for this participant
        TermsAndConditionsDetail:
          $ref: '#/components/schemas/TermsAndConditionsDetail'


    TermsAndConditionsDetail:
      type: object
      description: TnC details Parent
      properties:
        TermsAndConditionsItem:
          $ref: '#/components/schemas/TermsAndConditionsItem'
        InititatedDate:
          type: string
          description: Terms and Conditions initiated date
          maxLength: 256
        ExternalSigningServiceEnvelopeId:
          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'
        ExternalSigningServiceEnvelopeStatus:
          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeStatus'
        ExternalSigningServiceEnvelopePasscode:
          type: string
          description: Access code for the specifier to fill in the signer details. This will be populated only once, when signing is initiated

    NotificationWebhookStatusEnum:
      type: string
      enum:
        - Pending
        - Confirmed
        - Deactivated
      default: Pending

    ExternalSigningServiceEnvelopeStatus:
      enum:
        - Completed
        - Created
        - Declined
        - Deleted
        - Delivered
        - Processing
        - Sent
        - Signed
        - Template
        - Voided
        - Expired


    OrganisationSnapshotPage:
      allOf:
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/OrganisationSnapshot'
        - $ref: '#/components/schemas/Pages'

    Pageable:
      type: object
      properties:
        number:
          type: integer
          description: Page number
        sort:
          $ref: '#/components/schemas/Sort'
        size:
          type: integer
          description: Size of the page
        offset:
          type: integer
          description: Offset
        sorted:
          type: boolean
          description: Is the page sorted

    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        orderBy:
          type: array
          items:
            type: object
            properties:
              property:
                type: string
                description: Name of the property used for sorting
                example: createdAt
              direction:
                type: string
                description: Direction of sort, i.e. ascending or descending
                enum:
                  - ASC
                  - DESC
              ignoreCase:
                type: boolean
                description: Was the case ignored
              ascending:
                type: boolean
                description: Whether ascending

    OrganisationsSnapshot:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/OrganisationSnapshot'

    OrganisationSnapshot:
      type: object
      properties:
        OrganisationDetails:
          $ref: '#/components/schemas/Organisation'
        Contacts:
          $ref: '#/components/schemas/Contacts'
        AuthorisationServers:
          $ref: '#/components/schemas/AuthorisationServers'
        OrgDomainClaims:
          $ref: '#/components/schemas/OrganisationAuthorityDomainClaims'
        OrgDomainRoleClaims:
          $ref: '#/components/schemas/OrganisationAuthorityClaims'
        SoftwareStatements:
          additionalProperties:
            type: object
            properties:
              SoftwareDetails:
                $ref: '#/components/schemas/SoftwareStatement'
              SoftwareAuthorityClaims:
                $ref: '#/components/schemas/SoftwareAuthorityClaims'
              SoftwareCertificates:
                $ref: '#/components/schemas/CertificatesOrKeys'
        OrganisationCertificates:
          $ref: '#/components/schemas/CertificatesOrKeys'

    OrganisationsExportOpenData:
      type: array
      items:
        $ref: '#/components/schemas/OrganisationExportOpenData'

    OrganisationExportOpenData:
      type: object
      properties:
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        Status:
          type: string
          description: Status of the directory registration of an organisation
          enum:
            - Active
            - Pending
            - Withdrawn
          default: Active
        OrganisationName:
          type: string
          description: Name of the organisation.
          maxLength: 256
        CreatedOn:
          type: string
          description: JSONDatetime of organisation creation.
          maxLength: 30
        LegalEntityName:
          type: string
          description: Legal Entity name for the org. Usually the same as org name
          maxLength: 256
        CountryOfRegistration:
          type: string
          description: Country of registration for the org
          maxLength: 256
        CompanyRegister:
          type: string
          description: Legal company register for the country, i.e. Companies House
          maxLength: 256
        RegistrationNumber:
          type: string
          description: Company registration number from company register i.e. Companies House registration number
          maxLength: 256
        RegistrationId:
          type: string
          description: Registered ID for the organisation i.e. Legal Entity identifier number
          maxLength: 40
        RegisteredName:
          type: string
          maxLength: 256
        AddressLine1:
          type: string
          description: Address line 1
          maxLength: 256
        AddressLine2:
          type: string
          description: Address line 2
          maxLength: 256
        City:
          type: string
          description: City
          maxLength: 256
        Postcode:
          type: string
          description: Postcode
          maxLength: 40
        Country:
          type: string
          description: Country
          maxLength: 256
        ParentOrganisationReference:
          type: string
          description: Parent Organisation Reference
          maxLength: 65535
        Contacts:
          $ref: '#/components/schemas/Contacts'
        AuthorisationServers:
          $ref: '#/components/schemas/AuthorisationServers'
        OrgDomainClaims:
          $ref: '#/components/schemas/OrganisationAuthorityDomainClaims'
        OrgDomainRoleClaims:
          $ref: '#/components/schemas/OrganisationAuthorityClaims'

    Authorities:
      type: array
      items:
        $ref: '#/components/schemas/Authority'

    Authority:
      type: object
      properties:
        AuthorityId:
          $ref: '#/components/schemas/AuthorityId'
        AuthorityName:
          description: Name of the Authority i.e. FCA, etc
          type: string
          maxLength: 256
        AuthorityCode:
          description: Code of the Authority i.e. FCA, etc
          type: string
          maxLength: 40
          x-required-message: "AuthorityCode must be provided"
        AuthorityUri:
          description: URI of the authority
          type: string
        AuthorityCountry:
          description: country of the Authority
          type: string
          maxLength: 256
        Status:
          type: string
          description: Is this Authority Active/Inactive
          enum:
            - Active
            - Inactive

    Introspection:
      type: object
      properties:
        active:
          description: if the token has expired
          type: boolean
        client_id:
          description: id of client who owns the token
          type: string
          maxLength: 30
        exp:
          description: expiration time in ms
          type: string
        iat:
          description: when the token was issued
          type: string
        iss:
          description: the issuer
          type: string
        jti:
          description: unique string
          type: string
        scope:
          description: scope
          type: string
        token_type:
          description: type of token
          type: string
        sub:
          description: subject of token (not always present, depending on the token)
          type: string

    SoftwareStatementCertificateOrKeyType:
      type: string
      enum:
        - rtstransport
        - rtssigning
        - sigkey
        - enckey
        - brcac
      default: rtssigning
    SoftwareStatements:
      type: array
      items:
        $ref: '#/components/schemas/SoftwareStatement'
      description: The list of Software Statements

    SoftwareStatement:
      type: object
      properties:
        Status:
          type: string
          description: Is this software statement Active/Inactive
          enum:
            - Active
            - Inactive
          default: Active
        ClientId:
          type: string
          description: Software Statement client Id
          maxLength: 40
        ClientName:
          type: string
          description: Software Statement client name
          maxLength: 256
        Description:
          type: string
          description: Software Statement description
          maxLength: 256
        Environment:
          type: string
          description: The additional check for software statement, this field can avoid
          maxLength: 40
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        SoftwareStatementId:
          $ref: '#/components/schemas/SoftwareStatementId'
        Mode:
          type: string
          enum:
            - Live
            - Test
          default: Live
          description: Software Statement mode
          maxLength: 8
        RtsClientCreated:
          type: boolean
          description: Client created flag
        OnBehalfOf:
          type: string
          description: A reference to fourth party organisation resource on the RTS Directory if the registering Org is acting on behalf of another
          maxLength: 256
        PolicyUri:
          type: string
          pattern: "^(http:\\/\\/|https:\\/\\/).*"
          x-pattern-message: "PolicyUri must be in a URI format https://... or http://..."
          description: The Software Statement policy compliant URI
          maxLength: 256
        ClientUri:
          type: string
          pattern: "^(http:\\/\\/|https:\\/\\/).*"
          x-pattern-message: "ClientUri must be in a URI format https://... or http://..."
          description: The Software Statement client compliant URI
          maxLength: 256
        LogoUri:
          type: string
          pattern: "^(http:\\/\\/|https:\\/\\/).*"
          x-pattern-message: "LogoUri must be in a URI format https://... or http://..."
          format: uri
          description: The Software Statement logo compliant URI
          maxLength: 256
        RedirectUri:
          type: array
          items:
            type: string
            pattern: "^(http:\\/\\/|https:\\/\\/).*"
            x-pattern-message: "RedirectUri must be in a URI format https://... or http://..."
            format: uri
          description: The Software Statement redirect compliant URI
          maxLength: 256
        TermsOfServiceUri:
          type: string
          pattern: "^(http:\\/\\/|https:\\/\\/).*"
          x-pattern-message: "TermsOfServiceUri must be in a URI format https://... or http://..."
          format: uri
          description: The Software Statement terms of service compliant URI
          maxLength: 256
        Version:
          type: number
          description: Software Statement version as provided by the organisation's PTC
          maxLength: 40
        Locked:
          type: boolean
          description: Flag shows if assertion has been generated on the software statement - will be set to true when assertion is generated

    SoftwareStatementId:
      type: string
      description: Unique Software Statement Id
      maxLength: 40
    SoftwareStatementAssertion:
      type: string
      description: A signed JWT (JWS)
      maxLength: 4000
    SoftwareAuthorityClaims:
      type: array
      items:
        $ref: '#/components/schemas/SoftwareAuthorityClaim'
    SoftwareAuthorityClaim:
      type: object
      properties:
        SoftwareStatementId:
          $ref: '#/components/schemas/SoftwareStatementId'
        SoftwareAuthorityClaimId:
          $ref: '#/components/schemas/SoftwareAuthorityClaimId'
        Status:
          type: string
          description: Is this authority claim Active/Inactive
          enum:
            - Active
            - Inactive
          default: Active
        AuthorisationDomain:
          type: string
          description: Authorisation domain for the authority
          maxLength: 30
        Role:
          type: string
          description: Roles for the Authority i.e. ASPSP, AISP, PISP, CBPII
          maxLength: 10

    ClientCreationResponse:
      type: object
      properties:
        application_type:
          type: string
          description: OIDC application type response
          enum:
            - web
          default: web
        tls_client_auth_subject_dn:
          type: string
          description: the subject dn used to authenticate this client
        grant_types:
          type: array
          items:
            type: string
          description: grant_types
        id_token_signed_response_alg:
          type: string
        require_auth_time:
          type: boolean
        subject_type:
          type: string
        response_types:
          type: array
          items:
            type: string
          description: response_types
        post_logout_redirect_uris:
          type: array
          items:
            type: string
          description: post_logout_redirect_uris
        token_endpoint_auth_method:
          type: string
        introspection_endpoint_auth_method:
          type: string
        revocation_endpoint_auth_method:
          type: string
        client_id_issued_at:
          type: number
        client_id:
          type: string
        jwks_uri:
          type: string
        registration_client_uri:
          type: string
          description: management uri location to manage client post creation
        registration_access_token:
          type: string
          description: token used to manage client post creation
        redirect_uris:
          type: array
          items:
            type: string
          description: redirect_uris
        request_uris:
          type: array
          items:
            type: string
          description: request_uris

    UserEmailId:
      type: string
      description: User email address
      maxLength: 50

    SuperUsers:
      type: array
      items:
        $ref: '#/components/schemas/SuperUser'

    SuperUser:
      type: object
      properties:
        Email:
          type: string
          description: The super user email address
        Status:
          type: string
          description: Is this super user Active or Inactive
          enum:
            - Active
            - Inactive
          default: Active

    AuthorisationDomainName:
      type: string
      description: Authorisation Domain Name
      maxLength: 30

    AuthorisationDomainRoleName:
      type: string
      description: Authorisation Domain Role Name
      maxLength: 30

    AuthorityAuthorisationDomainId:
      type: string
      description: Mapping ID between Authority and Authorisation Domain
      maxLength: 50

    AuthorisationDomainUsers:
      type: array
      items:
        $ref: '#/components/schemas/AuthorisationDomainUser'

    AuthorisationDomainUser:
      type: object
      properties:
        AuthorisationDomainUserId:
          type: string
          description: Unique record ID
        Email:
          type: string
          description: The user email address
        AuthorisationDomain:
          type: string
          description: The authorisation domain for this user
        AuthorisationDomainRole:
          type: string
          description: The authorisation domain role for this user
        Status:
          type: string
          description: Is this user Active or Inactive
          enum:
            - Active
            - Inactive
          default: Active
        ContactRole:
          $ref: '#/components/schemas/ContactRoleEnum'

    AuthorisationDomains:
      type: array
      items:
        $ref: '#/components/schemas/AuthorisationDomain'

    AuthorisationDomain:
      type: object
      properties:
        AuthorisationDomainName:
          type: string
          description: The authorisation domain name
        AuthorisationDomainRegion:
          type: string
          description: The authorisation domain region
        AuthorisationDomainDescription:
          type: string
          description: The authorisation domain description
        Status:
          type: string
          description: Is this Domain Active or Inactive
          enum:
            - Active
            - Inactive
          default: Active

    AuthorisationDomainRoles:
      type: array
      items:
        $ref: '#/components/schemas/AuthorisationDomainRole'

    AuthorisationDomainRole:
      type: object
      properties:
        AuthorisationDomainName:
          type: string
          description: The authorisation domain name
        AuthorisationDomainRoleName:
          type: string
          description: The authorisation domain role
        AuthorisationDomainRoleDescription:
          type: string
          description: The authorisation domain role description
        Status:
          type: string
          description: Is this mapping Active or Inactive
          enum:
            - Active
            - Inactive
          default: Active

    AuthorityAuthorisationDomains:
      type: array
      items:
        $ref: '#/components/schemas/AuthorityAuthorisationDomain'

    AuthorityAuthorisationDomain:
      type: object
      properties:
        AuthorisationDomainName:
          type: string
          description: The authorisation domain name
        AuthorityId:
          type: string
          description: The GUID of the Authority
        AuthorityAuthorisationDomainId:
          type: string
          description: The GUID of the Authority-Domain mapping
        Status:
          type: string
          description: Is this user Active or Inactive
          enum:
            - Active
            - Inactive
          default: Active

    OrganisationAuthorityDomainClaimId:
      type: string
      description: Organisation Authority Domain Claim ID
      maxLength: 50

    OrganisationAuthorityDomainClaims:
      type: array
      items:
        $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'

    OrganisationAuthorityDomainClaim:
      type: object
      properties:
        OrganisationAuthorityDomainClaimId:
          type: string
          description: The unique org authority domain claim ID
        AuthorisationDomainName:
          type: string
          description: The authorisation domain name
        AuthorityId:
          type: string
          description: The GUID of the Authority
        AuthorityName:
          type: string
          description: The name of the Authority
        RegistrationId:
          type: string
          description: The registration ID
        Status:
          type: string
          description: Is this user Active or Inactive
          enum:
            - Active
            - Inactive
          default: Active

    AuthorisationDomainUserId:
      type: string
      description: Unique record ID to identify Domain user
      maxLength: 50

    UserDetail:
      type: object
      properties:
        SuperUser:
          type: boolean
          description: Is the user a super user
        SystemUser:
          type: boolean
          description: Is the user a system user
        BasicInformation:
          type: object
          properties:
            UserEmail:
              type: string
            Status:
              type: string
              enum:
                - Active
                - Inactive
        OrgAccessDetails:
          type: object
          description: Map Key - Org ID, Map Value - Org Access Detail(contaning info about org admin and domain role details)
          additionalProperties:
            $ref: '#/components/schemas/OrgAccessDetail'
        DirectoryTermsAndConditionsDetails:
          $ref: '#/components/schemas/TermsAndConditionsDetails'

    TermsAndConditionsDetails:
      type: object
      description: Details of TnC
      properties:
        RequiresSigning:
          type: boolean
          description: Does the Directory TnC require signing
        Updated:
          type: boolean
          description: Has the document updated since the user signed
        TermsAndConditionsItem:
          $ref: '#/components/schemas/TermsAndConditionsItem'

    UserOPInfo:
      type: object
      description: The information contained within is subject to the scopes passed during token generation
      properties:
        sub:
          type: string
          description: Contains the email address
        family_name:
          type: string
          description: Family name
        given_name:
          type: string
          description: Given name
        name:
          type: string
          description: Full name
        email:
          type: string
          description: Email address
        email_verified:
          type: boolean
          description: Is the email verified
        address:
          type: string
          description: Address
        phone_number:
          type: string
          description: Phone number
        phone_number_verified:
          type: boolean
          description: Is the phone number verified

    WellKnown:
      type: object
      properties:
        acr_values_supported:
          type: array
          items: {}
        authorization_endpoint:
          type: string
          description: REQUIRED. URL of the OP's OAuth 2.0 Authorization Endpoint
        claims_parameter_supported:
          type: boolean
          description: OPTIONAL. Boolean value specifying whether the OP supports use of
            the claims parameter, with true indicating support. If omitted, the
            default value is false
        claims_supported:
          type: array
          items: {}
          description: RECOMMENDED. JSON array containing a list of the Claim Names of the
            Claims that the OpenID Provider MAY be able to supply values for
        code_challenge_methods_supported:
          type: array
          items: {}
        end_session_endpoint:
          type: string
        check_session_endpoint:
          type: string
        grant_types_supported:
          type: array
          items: {}
          description: OPTIONAL. JSON array containing a list of the OAuth 2.0 Grant Type
            values that this OP supports
        id_token_signing_alg_values_supported:
          type: array
          items: {}
          description: REQUIRED. JSON array containing a list of the JWS signing algorithms
            (alg values) supported by the OP for the ID Token to encode the
            Claims in a JWT
        issuer:
          type: string
          description: REQUIRED. URL using the https scheme with no query or fragment
            component that the OP asserts as its Issuer Identifier
        jwks_uri:
          type: string
          description: REQUIRED. URL of the OP's JSON Web Key Set [JWK] document.
        registration_endpoint:
          type: string
          description: RECOMMENDED. URL of the OP's Dynamic Client Registration Endpoint
        request_object_signing_alg_values_supported:
          type: string
          description: OPTIONAL. JSON array containing a list of the JWS signing algorithms
            (alg values) supported by the OP for Request Objects
        request_parameter_supported:
          type: boolean
          description: OPTIONAL. Boolean value specifying whether the OP supports use of
            the request parameter, with true indicating support. If omitted, the
            default value is false
        request_uri_parameter_supported:
          type: boolean
          description: OPTIONAL. Boolean value specifying whether the OP supports use of
            the request_uri parameter, with true indicating support. If omitted,
            the default value is true
        require_request_uri_registration:
          type: boolean
          description: OPTIONAL. Boolean value specifying whether the OP requires any
            request_uri values used to be pre-registered using the request_uris
            registration parameter
        pushed_authorization_request_endpoint:
          type: array
          items: {}
        response_modes_supported:
          type: array
          items: {}
          description: OPTIONAL. JSON array containing a list of the OAuth 2.0
            response_mode values that this OP supports
        response_types_supported:
          type: array
          items: {}
          description: REQUIRED. JSON array containing a list of the OAuth 2.0
            response_type values that this OP supports
        scopes_supported:
          type: array
          items: {}
          description: RECOMMENDED. JSON array containing a list of the OAuth 2.0 [RFC6749]
            scope values that this server supports
        subject_types_supported:
          type: array
          items: {}
          description: REQUIRED. JSON array containing a list of the Subject Identifier
            types that this OP supports
        token_endpoint_auth_methods_supported:
          type: array
          items: {}
          description: OPTIONAL. JSON array containing a list of Client Authentication
            methods supported by this Token Endpoint
        token_endpoint_auth_signing_alg_values_supported:
          type: array
          items: {}
          description: OPTIONAL. JSON array containing a list of the JWS signing algorithms
            (alg values) supported by the Token Endpoint for the signature on
            the JWT
        token_endpoint:
          type: string
          description: URL of the OP's OAuth 2.0 Token Endpoint
        userinfo_endpoint:
          type: string
          description: RECOMMENDED. URL of the OP's UserInfo Endpoint
        userinfo_signing_alg_values_supported:
          type: array
          items: {}
          description: OPTIONAL. JSON array containing a list of the JWS signing algorithms
            (alg values) [JWA] supported by the UserInfo Endpoint to encode the
            Claims in a JWT
        authorization_signing_alg_values_supported:
          type: array
          items: {}
        introspection_endpoint:
          type: string
        introspection_endpoint_auth_methods_supported:
          type: array
          items: {}
        introspection_endpoint_auth_signing_alg_values_supported:
          type: array
          items: {}
        revocation_endpoint:
          type: string
        revocation_endpoint_auth_methods_supported:
          type: array
          items: {}
        revocation_endpoint_auth_signing_alg_values_supported:
          type: array
          items: {}
        frontchannel_logout_supported:
          type: boolean
        frontchannel_logout_session_supported:
          type: boolean
        tls_client_certificate_bound_access_tokens:
          type: boolean
        claim_types_supported:
          type: array
          items: {}
          description: OPTIONAL. JSON array containing a list of the Claim Types that the
            OpenID Provider supports

    OrgAccessDetail:
      type: object
      properties:
        OrgAdmin:
          type: boolean
          description: Is the user the org admin of the current org
        DomainRoleDetails:
          type: array
          description: Array of domain, role and status of domain role mapping
          items:
            $ref: '#/components/schemas/DomainRoleDetail'

    DomainRoleDetail:
      type: object
      properties:
        AuthorisationDomainName:
          type: string
        AuthorisationDomainRoleName:
          type: string
        Status:
          $ref: '#/components/schemas/StatusEnum'
        ContactRole:
          $ref: '#/components/schemas/ContactRoleEnum'

    TnCId:
      type: integer
      description: TnC unique identifier

    Pages:
      type: object
      properties:
        totalPages:
          type: integer
        totalSize:
          type: integer
        pageable:
          $ref: '#/components/schemas/Pageable'
        numberOfElements:
          type: integer
        size:
          type: integer
        offset:
          type: integer
        empty:
          type: boolean
        pageNumber:
          type: integer

    TermsAndConditionsPage:
      allOf:
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/TermsAndConditionsItem'
        - $ref: '#/components/schemas/Pages'

    TermsAndConditionsItem:
      allOf:
        - type: object
          properties:
            TnCId:
              $ref: '#/components/schemas/TnCId'
            Status:
              type: string
              description: Is the TnC Active or Inactive
              enum:
                - Active
                - Inactive
        - $ref: '#/components/schemas/TermsAndConditionsCreateRequest'

    TermsAndConditionsCreateRequest:
      allOf:
        - type: object
          properties:
            Name:
              type: string
              minLength: 1
              description: The Name of the TnC
              x-required-message: Name must be provided
            Type:
              type: string
              minLength: 1
              description: Role for which this TnC applies
              enum:
                - Participant
                - Directory
              x-required-message: Type must be provided
        - required:
            - Type
            - Name
        - $ref: '#/components/schemas/TermsAndConditionsUpdateRequest'

    ExternalSigningServiceSignerTemplateConfig:
      type: object
      properties:
        Signer1TemplateId:
          type: string
          minLength: 1
          description: Template ID for 1 signer
        Signer1Version:
          type: integer
          description: Version of the TnC document
          readOnly: true
        Signer2TemplateId:
          type: string
          minLength: 1
          description: Template ID for 2 signers
        Signer2Version:
          type: integer
          description: Version of the TnC document
          readOnly: true
        Signer3TemplateId:
          type: string
          minLength: 1
          description: Template ID for 3 signers
        Signer3Version:
          type: integer
          description: Version of the TnC document
          readOnly: true
        Signer4TemplateId:
          type: string
          minLength: 1
          description: Template ID for 4 signers
        Signer4Version:
          type: integer
          description: Version of the TnC document
          readOnly: true
        Signer5TemplateId:
          type: string
          minLength: 1
          description: Template ID for 5 signers
        Signer5Version:
          type: integer
          description: Version of the TnC document
          readOnly: true
        Signer6TemplateId:
          type: string
          minLength: 1
          description: Template ID for 6 signers
        Signer6Version:
          type: integer
          description: Version of the TnC document
          readOnly: true

    TermsAndConditionsUpdateRequest:
      type: object
      properties:
        Content:
          type: string
          minLength: 1
          description: The MarkDown of the TnC
          x-required-message: MarkDown must be provided
        ExternalSigningServiceName:
          enum:
            - DocuSign
          description: The Name of the External Signing Service
          x-required-message: External signing service name must be provided
        ExternalSigningServiceSignerTemplateConfig:
          $ref: '#/components/schemas/ExternalSigningServiceSignerTemplateConfig'
        ExternalSigningServiceSubject:
          type: string
          minLength: 1
          description: The Subject of the External Signing Service
          x-required-message: Subject must be provided
      required:
        - Content

    OrganisationAdminUsers:
      type: array
      items:
        $ref: '#/components/schemas/OrganisationAdminUser'

    OrganisationAdminUser:
      type: object
      properties:
        Status:
          type: string
          description: Is the admin user active
          enum:
            - Active
            - Inactive
        UserEmail:
          type: string
          description: User's email address
        DomainRoleDetails:
          type: array
          items:
            $ref: '#/components/schemas/DomainRoleDetail'

    ApiResources:
      allOf:
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/ApiResource'
        - $ref: '#/components/schemas/Pages'

    ApiResource:
      type: object
      properties:
        ApiResourceId:
          $ref: '#/components/schemas/ApiResourceId'
        ApiFamilyType:
          $ref: '#/components/schemas/ApiFamilyType'
        ApiVersion:
          $ref: '#/components/schemas/ApiVersion'
        ApiDiscoveryEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/ApiDiscoveryEndpoint'

    ApiVersion:
      type: number
      description: The version number of the API

    ApiFamilyType:
      type: string
      minLength: 1
      maxLength: 40
      description: The type of API this record describes

    ApiResourceId:
      type: string
      maxLength: 40
      description: The unique ID of an Api version resource

    ApiDiscoveryEndpoints:
      allOf:
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/ApiDiscoveryEndpoint'
        - $ref: '#/components/schemas/Pages'

    ApiDiscoveryEndpoint:
      allOf:
        - type: object
          properties:
            ApiDiscoveryId:
              type: string
              maxLength: 40
              description: Unique Id of this discovery endpoint record
        - $ref: '#/components/schemas/ApiDiscoveryEndpointRequest'

    ApiDiscoveryEndpointRequest:
      type: object
      properties:
        ApiEndpoint:
          description: A compliant URI
          pattern: "^(http:\\/\\/|https:\\/\\/).*"
          x-pattern-message: "ApiEndpoint must be in a URI format https://... or http://..."
          type: string
          format: uri
          maxLength: 256

    ApiDiscoveryEndpointId:
      type: string
      maxLength: 40
      description: The unique ID of an Api discovery endpoint resource

    OrgTermsAndConditionsPage:
      allOf:
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/OrgTermsAndConditionsDetail'
        - $ref: '#/components/schemas/Pages'

    UserTermsAndConditionsPage:
      allOf:
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/TermsAndConditionsDetail'
        - $ref: '#/components/schemas/Pages'

    EssPollResponse:
      type: object
      properties:
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        EssEnvelopeId:
          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'
        ExternalSigningServiceEnvelopeStatus:
          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeStatus'

    EssPollResponses:
      type: array
      items:
        $ref: '#/components/schemas/EssPollResponse'

    WebhookStatusResponses:
      type: array
      items:
        $ref: '#/components/schemas/WebhookStatusResponse'

    WebhookStatusResponse:
      type: object
      properties:
        AuthorisationServerId:
          $ref: '#/components/schemas/AuthorisationServerId'
        WebhookStatus:
          $ref: '#/components/schemas/NotificationWebhookStatusEnum'

    TnCsToBeSigned:
      type: array
      items:
        $ref: '#/components/schemas/TermsAndConditionsItem'

    ExternalSigningServiceEnvelopeId:
      type: string
      description: The envelope id of the ess signing request

    ContactRoleEnum:
      type: string
      description: The role of the contact
      enum:
        - PTC
        - STC
        - PBC
        - SBC
        - PSDC
        - PDRC
        - SSDC
        - SDRC
